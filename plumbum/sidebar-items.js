initSidebarItems({"enum":[["Chunk",""],["ConduitM","Represents a conduit, i.e. a sequence of await/yield actions."],["Void",""]],"fn":[["consume","Wait for an input chunk from upstream."],["consume_chunk","Wait for a single input value from upstream."],["defer","Defers a conduit action. Can be used to introduce artifical laziness."],["leftover","Provide a single piece of leftover input to be consumed by the next component in the current binding."],["leftover_chunk","Provide a single piece of leftover input to be consumed by the next component in the current binding."],["produce","Send a value downstream to the next component to consume."],["produce_chunk","Send a chunk of values downstream to the next component to consume."]],"macro":[["fuse!","Provides a convient syntax for fusing conduits."],["pipe!","Provides a convient syntax for conduit operations."]],"mod":[["io","Interfacing with `std::io`."]],"struct":[["Kleisli","The Kleisli arrow from `A` to `ConduitM<I, O, B>`."]],"type":[["Conduit","Consumes a stream of input values and produces a stream of output values, without producing a final result."],["Sink","Consumes a stream of input values and produces a final result, without producing any output."],["Source","Provides a stream of output values, without consuming any input or producing a final result."]]});